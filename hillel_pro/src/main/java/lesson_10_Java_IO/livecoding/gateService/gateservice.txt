Представим что нам необходимо сделать логирование какого-то "шлюза/гейта" через который идут пароходы.

И нам необходимо сделать конфигурацию, и в этой конфигурации мы будем указывать куда будут записываться логи.
Либо в файл, либо в консоль. Представим что у нас два энвайронмента dev - локальный энвайронмент где у нас есть
консоль, и prod - где у нас консоли нет, соответственно нам нужно писать в файл что бы у нас все агенты системы
логирования в проекте (другие программисты) могли тоже читать логи. И таким образом через конфигурацию (конфиг файл)
мы будем влиять на нашу систему.

Сам этот Конфиг файл может не обязательно быть в нашей системе, он может быть к примеру в системе у DevOps, либо у
админов или менеджеров. И вот, у них открывается этот конфиг файл с большим количеством пропертей, и они с их помощью
(задавая эти свойства в своем файле) управляют нашим проектом, и это будет влиять на логику нашей системы.

А мы в своей системе уже пишем, если мы считали этот конфиг файл, на основании состояния той или иной проперти
строим логику поведения проекта (в зависимости от ее состояния задействуем ту или иную реализацию).

Это такое прямое взаимодействие манагерского уровня с уровнем продукта. И это очень удобно потому как люди не знающие
кода могут управлять нашим продуктом через проперти файл.

environment: dev | prod
if dev -> output to console
if prod -> write to file



