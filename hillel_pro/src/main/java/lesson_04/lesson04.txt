Урок 04 (Понедельник - 30.12.2024)
Тема: Введение в ООП
======================================================================================================
Ключевые разделы:

1) ОСНОВНЫЕ КОНЦЕПЦИИ ОБЬЕКТНО-ОРИЕНТИРОВАННОГО ПРОГРАММИРОВАНИЯ (ООП)
2) ПРИНЦИПЫ ООП ч1
3) ПРИНЦИПЫ ООП ч2
4) ПОНЯТИЕ КЛАССА И ОБЬЕКТА
5) КОНСТРУКТОРЫ
6) КЛАСС OBJECT
7) МОДИФИКАТОРЫ ДОСТУПА
8) GETTERS ТА SETTERS

======================================================================================================
1) ОСНОВНЫЕ КОНЦЕПЦИИ ОБЬЕКТНО-ОРИЕНТИРОВАННОГО ПРОГРАММИРОВАНИЯ (ООП)

*
======================================================================================================
2) ПРИНЦИПЫ ООП ч1

*
======================================================================================================
3) ПРИНЦИПЫ ООП ч2

*
======================================================================================================
4) ПОНЯТИЕ КЛАССА И ОБЬЕКТА

*
======================================================================================================
5) КОНСТРУКТОРЫ

*
======================================================================================================
6) КЛАСС OBJECT

В основе иерархии всех классов лежит класс java.lang.Object, самый верхний класс в Java.
java.lang.Object является прародителем (суперклассом) всех объектов и корневым классом, из которого выводятся
все остальные классы. Методы, определенные в Object, имеют решающее значение, поскольку они появляются
в каждом экземпляре каждого класса повсюду в Java.

    * Каждый класс имеет класс Object в качестве своего суперкласса (неявно).
    * Все обьекты, включая массивы, наследуют методы этого класса.
    * Только простые типы не могут быть обьектами: числа, символы и логические выражения.

Класс java.lang.Object имеет следуюшие методы:

    boolean equals(Object obj) - определяет, эквивалентен ли один обьект другому.
    Class<?> getClass() - получает класс обьекта во время выполнения.
    int hashCode() - возвращает хеш-код обьекта.
    String toString() - возвращает строковое описание обьекта.
    clone() - создает новый обьект, идентичный клонируемому.
    wait() - переводит поток в режим ожидания.
    notify() - возобновляет один из потоков, вызвавших wait() для того же объекта.
    notifyAll() - возобновляет (уведомляет) все потоки, запустившие метод wait() для того же объекта.
    finalize() - выполняет финализацию перед уничтожением объекта сборщиком мусора, является @Deprecated.
*
======================================================================================================
7) МОДИФИКАТОРЫ ДОСТУПА


    ОБЛАСТЬ ВИДИМОСТИ В ЗАВИСИМОСТИ ОТ МОДИФИКАТОРА ДОСТУПА

                          | CLASS | PACKAGE | SUBCLASS | WORLD |
        public            |   Y+  |    Y+   |     Y+   |   Y+  |
       protected          |   Y+  |    Y+   |     Y+   |   N-  |
package-private (default) |   Y+  |    Y+   |     N-   |   N-  |
        private           |   Y+  |    N-   |     N-   |   N-  |
*
======================================================================================================
8) GETTERS ТА SETTERS


*
======================================================================================================