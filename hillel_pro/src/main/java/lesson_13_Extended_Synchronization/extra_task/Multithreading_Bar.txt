Представьте, что вы разрабатываете систему управления баром, где клиенты могут делать заказы напитков,
а бармены готовят эти напитки. Стоит задача создать программу, которая стимулирует эту систему с помощью потоков.

Создайте класс Bar, который будет представлять бар. В этом классе создайте методы для:

-Принятия заказов от клиентов
-Приготовления напитков баременами
-Выдача готовых напитков клиентам

Создайте классы Client и Bartender которые реализуют интерфейс Runnable,
будут являться типами потоков. Класс Client представляет клиента который делает заказ.
Класс Bartender представляет бармена, который готовит напитки.

В методе run() каждого из этих классов реализуйте соответствующую логику. Например, клиент может делать
заказы, а бармен может принимать заказы, приготавливать напиток и выдавать его клиенту.

Используйте механизм синхронизации для управления доступом к ресурсам (например, заказов и готовых напитков),
что бы избежать гонки за ресурсами. (Разумеется что если бармен готовит напиток, то он не может одновременно
с этим принимать заказ, то-есть он должен получить состояние блокирования, не быть доступен. Когда бармен,
приготовил, тоесть у нас должно быть какое-то состояние напитка: ordered, been prepared, ready..если напиток ready,
то он его выдает, лок снимается и бармен становится снова доступен для взятия следующего заказа со стойки).
Создайте обьекты клиентов и барменов и запустите их в отдельных потоках.
Выведите сообщение о каждом действии, которое происходит в программе (например, "Клиент №1 заказал коктейль",
"Бармен приготовил кофе", и.т.п.)

1) Enum drinks each with its price.
2) Drinks should be chosen randomly in every thread.
3) Should be constant time for each drink preparation time.

Мои клиенты должны рандомным образом генерить напитки в заказ из енама, при этом сумма заказанных напитков
должна зачисляться на их счет + 15% чаевых бармену.

Должны быть сущности:
 Bartender
 Client
 Drink
