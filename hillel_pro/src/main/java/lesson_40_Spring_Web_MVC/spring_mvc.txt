Spring MVC Notes

Spring MVC это модуль Spring фреймворка реализующий паттерн Model View Controller.

Model - содержит данные программы. Данные могут быть в виде обьекта в еденичном экземпляре
        либо как коллекция обьектов.

Controller - контроллер содержит бизнес-логику программы. Здесь аннотация @Controller используется
             для обозначения класса как контроллера.
View - представление, подает предоставленную информацию в определенном формате (xml, json, etc).


Аннотации:

@Component - это базовая аннотация, родитель всех анотаций, класс помеченный как компонент
             спринг помещает в контекст и делает бином.
             Остальные аннотации от него наследуются.

@Repository - помечаются те классы, которые работают с базой данных.
@Controller - помечаем те классы в которых мы настраиваем и мапим наши эндпойнты,
              к контроллерам ходит фронтенд.
@Service - помечаем логчные классы.

В отличии от контроллера, где можно реализовывать отправку и возврат данных в разных форматах,
рест контроллер позволяет работать только с json, в нем при обьявлении метода не нужно писать аннотации
типа @ResponseBody возвращаемого типа и в @GetMapping тоже есть различия.

@Controller --> @GetMapping(path = /getStudents, produces = "application/xml, consumes = "application/xml")
@RestController --> GetMapping("/getStudents")

@RequestMapping
@GetMapping
@PostMapping
@PutMapping
@DeleteMapping

@RequestParam
@PathVariable

@RequestBody
@ResponseBody

Стандартный подход по иерархии это слой DAO который в контексте Spring называется Repository
общается с базой данных, затем есть Service, это бизнес логика, то-есть они вытягивают данные,
модели и делают какие то калькуляции и прочую логику с данными, и потом уже они отправляют
эти данные наверх где их перехватывает контроллер, берет данную модельку и отправляет наружу
через эндпойнты, где ее потом забирают фронтендеры, сервисы, либо любой другой
заинтересованный клиент.
