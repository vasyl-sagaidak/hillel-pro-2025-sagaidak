=========================================================================================
                                 СТРУКТУРНЫЕ ПАТТЕРНЫ
                              (GOF - STRUCTURAL PATTERNS)
=========================================================================================

ADAPTER (АДАПТЕР):
           -> Конвертирует интерфейс класса в другой интерфейс, ожидаемый клиентом.
              Позволяет классам с разными интерфейсами работать вместе.

BRIDGE (МОСТ):
           -> Разделяет абстракцию и реализацию так, что бы они могли изменяться
              независимо.

COMPOSITE (КОМПАНОВЩИК):
           -> Компонует обьекты в древовидную структуру, представляя их в виде иерархии.
              Позволяет клиенту одинаково обращаться как к отдельному обьекту, так и к
              целому поддереву.

DECORATOR (ДЕКОРАТОР):
           -> Динамически предоставляет обьекту дополнительные возможности. Представляет
              собой гибкую альтернативу наследованию для расширения функциональности.

FACADE (ФАСАД):
           -> Предоставляет единый интерфейс к группе интерфейсов подсистемы. Определяет
              высокоуровневый интерфейс, делая подсистему проще для использования.

FLYWEIGHT (ПРИСПОСОБЛЕНЕЦ/ЛЕГКОВЕС):
           -> Благодаря совместному использованию, поддерживает эффективную работу с
              большим количеством обьектов.

PROXY (ПРОКСИ):
           -> Предоставляет замену другого обьекта для контроля доступа к нему.

=========================================================================================