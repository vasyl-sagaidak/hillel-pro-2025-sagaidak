У цьому завданні вам потрібно буде реалізувати паттерн Фабричний метод для створення
об'єктів різних типів.

1.Створіть інтерфейс та його реалізації:

a. Створіть інтерфейс Transport, який містить методи для руху (наприклад, move()).
b. Створіть дві реалізації цього інтерфейсу: Car та Plane.

2.Створіть абстрактний клас Фабрики:

a. Створіть абстрактний клас TransportFactory, що має абстрактний метод createTransport(),
який повертає об'єкт типу Transport.

3.Реалізуйте конкретні фабрики:

a. Створіть дві конкретні фабрики: CarFactory та PlaneFactory, які наслідуються від
TransportFactory.
b. Реалізуйте метод createTransport() у кожній фабриці таким чином, щоб він створював
об'єкт типу Car для CarFactory та об'єкт типу Plane для PlaneFactory.

4.Створіть клас для демонстрації:

a. Створіть клас Client, який має метод run().
b. У методі run() створіть екземпляри фабрик (CarFactory та PlaneFactory) і викличте їх
метод createTransport() для створення транспортних засобів.
c. Викличте методи руху для кожного створеного транспортного засобу.

5.Перевірте правильність роботи:

a. Переконайтеся, що об'єкти типу Car створені CarFactory, а об'єкти типу Plane - PlaneFactory.
b. Переконайтеся, що кожен транспортний засіб виконує свій метод руху.

6.Залийте виконаний проєкт у свій GitHub репозиторій, посилання на який зазначте в LMS