Урок 31 (Четверг - 24.04.2025)
Тема: Unit Testing
======================================================================================================
Ключевые разделы:

1)
2) INTEGRATION TEST
3)
4)
5)
6)
7)
8)
9)

======================================================================================================
1)

*
======================================================================================================
2) INTEGRATION TEST

Интеграционные тесты необходимы и используются для тестирования взаимодействия пары(ряда) сервисов в
определенном окружении.

Ну, например наш класс коннектится к базе данных или еще каким-то внешним ресурсам на удаленных серверах,
берет там какую-то дату, выполняет с ней логику, и предоставляет нам результат.

Бывают случаи, когда нам необходимо протестировать определенную пару сервисов, либо функционал нашего
конкретного сервиса который взаимодествует с другими, и результаты его работы полагаются на данные
которые он получает не только в результате выполнения внутренней логики, но и в результате взаимодействия
с окружением, но мы не хотим поднимать остальные сервисы, в этом случае нам помогут такие штуки, как:
__________________________________________________________________________________________________________________
  ТИП  |            ЧТО ДЕЛАЕТ                       |          ДЛЯ ЧЕГО НУЖЕН                                    |
- Stab | Заранее заданное поведение                  | Возвращает фиксированные данные                            |
- Mock | Поддельный обьект + проверка взаимодействия | Проверка вызова методов, аргументов и количества           |
- Spy  | Обертка над реальным обьектом               | Частичное мокирование: часть настоящая, часть - подмененная|
_______|_____________________________________________|____________________________________________________________|

Stub's - это как бы фейковые данные которые мы создаем для того, что бы была возможность протестировать нужный
нам функционал, например нам нужна база данных, мы создаем стаб с фейковыми данными с которыми могут работать
наши тесты.

Стаб - простой обьект, который возвращает заданные ответы, что бы не использовать реальную зависимость.

Mock - это когда мы на уровне нашего кода создаем прокси обьект, тем самым мы подменяем им результат возврата
данных из внешнего сервиса/депенденси, мокаем его.

Мок - это как стаб, но с возможностью проверить, вызвался ли метод, сколько раз, с какими аргументами.

Spy - позволяет нам делать частичное мокирование, часть функционала настоящая, часть подмененная.

Spy - это обертка над реальным обьектом. Он вызывает настоящие методы, но ты можешь переопределить поведение
некоторых из них.


*
======================================================================================================
3)

*
======================================================================================================
4)

*
======================================================================================================
5)

*
======================================================================================================
6)

*
======================================================================================================
7)

*
======================================================================================================
8)

*
======================================================================================================
9)

*
======================================================================================================